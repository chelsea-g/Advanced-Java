/**
 *  Generatates unique_tokens.txt that is a list of
 *  the unique tokens found by the AnalyzeFile object.
 *  Each token is separated by a new line.
 *
 *  @author Chelsea Greger
 *	@since v1.0
 */

package java112.analyzer;

import java.util.*;
import java.io.*;

public class UniqueTokenAnalyzer implements Analyzer {

	// Declare instance variables
	private Set<String> uniqueTokensList;
	private Properties  properties;

	/**
	 * Constructor for UniqueTokenAnalyzer that instantiates a
	 * TreeSet of Strings to hold the produced unique tokens list
	 */
	public UniqueTokenAnalyzer() {

		uniqueTokensList = new TreeSet<String>();

	}

	/**
	 * Properties constructor for UniqueTokenAnalyzer.
	 *
	 * @param  properties properties list for the analyzers
	 */
	public UniqueTokenAnalyzer(Properties properties) {

		this();
		this.properties = properties;

	}

	/**
	 * Processes a unique token by adding it to the unique tokens list
	 * @param token [description]
	 */
	public void processToken(String token) {

		getUniqueTokensList().add(token);

	}

	/**
	 * Creates, formats, and writes the list of unique tokens
	 * generated by the AnalyzeFile object
	 *
	 * @param  inputFilePath  		 the file that was given by the user
	 *                           	 and processed
	 */
	public void writeOutputFile(String inputFilePath) {

		// Create and write each unique token to the output file
		try (PrintWriter out =
				new PrintWriter(new BufferedWriter(new FileWriter(properties.getProperty("output.dir") + properties.getProperty("output.file.unique"))))) {

			for (String token : getUniqueTokensList()) {

				out.println(token);

			}

		} catch (FileNotFoundException fileNotFoundException) {

			System.out.println("There was a problem creating the file.");

			fileNotFoundException.printStackTrace();

        } catch (IOException ioException) {

            System.out.println("There was a problem writing to the file.");

            ioException.printStackTrace();

        } catch (Exception exception) {

            System.out.println("There was some other problem.");

            exception.printStackTrace();

        }

	}

	/**
	 * Get the list of unique tokens for this file
	 * @return uniqueTokensList
	 */
	public Set<String> getUniqueTokensList() {

		return uniqueTokensList;

	}

}
